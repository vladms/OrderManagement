package ro.utcn.pt.bonta.presentation;

import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

import ro.utcn.pt.bonta.model.Product;

public class CreateProductScreen {
	public JFrame mainFrame;
	private JPanel controlPanel;

	private JTextField idTextField;
	private JTextField nameTextField;
	private JTextField priceTextField;

	private JButton cancelButton;
	private JButton createButton;

	private AppInterfaceButtonEvents buttonEventHandler;

	private ArrayList<Product> productsList;

	public CreateProductScreen(AppInterfaceButtonEvents buttonEventHandler) {
		this.buttonEventHandler = buttonEventHandler;
	}

	public void prepareComponents(ArrayList<Product> productsList) {
		this.productsList = productsList;
		this.prepareGUI();
		this.placeElements();
	}

	private void prepareGUI() {
		mainFrame = new JFrame("Create new product");
		mainFrame.setSize(500, 400);
		mainFrame.setLayout(new GridLayout(1, 1));
		mainFrame.addWindowListener(new WindowAdapter() {
			public void windowClosing(WindowEvent windowEvent) {
				System.exit(0);
			}
		});

		controlPanel = new JPanel();
		controlPanel.setLayout(new GridLayout(6, 1));

		mainFrame.add(controlPanel);
		mainFrame.setVisible(false);
	}

	/*
	 * placeButtons(): Add elements on the controlPanel
	 */
	private void placeElements() {

		idTextField = new JTextField("Id");
		nameTextField = new JTextField("Name");
		priceTextField = new JTextField("Price");

		cancelButton = new JButton("Cancel");
		createButton = new JButton("Create product");

		controlPanel.add(idTextField);
		controlPanel.add(nameTextField);
		controlPanel.add(priceTextField);
		controlPanel.add(cancelButton);
		controlPanel.add(createButton);

		cancelButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				buttonEventHandler.nothingHappenedOnUI();
				mainFrame.setVisible(false);
			}
		});

		createButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				boolean isValid = false;
				if (idTextField.getText().matches("[0-9]+") && idTextField.getText().length() > 2) {
					if (priceTextField.getText().matches("[0-9]+") && priceTextField.getText().length() > 2) {
						isValid = true;
					}				}
				
				

				int size = productsList.size();
				int index;
				for (index = 0; index < size; ++index) {
					if (productsList.get(index).getId().equals(idTextField.getText())) {
						isValid = false;
					}
				}
				if (isValid) {
					buttonEventHandler.newProductCreated(idTextField.getText(), nameTextField.getText(),
							Double.parseDouble(priceTextField.getText()));
					mainFrame.setVisible(false);
				} else {
					JOptionPane.showMessageDialog(mainFrame, "Product with id:" + idTextField.getText() + " already exists!");
				}
			}
		});
	}
}
